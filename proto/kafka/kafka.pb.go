// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.12.4
// source: kafka.proto

package kafkaMessages

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Konsumen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdKonsumen   string               `protobuf:"bytes,1,opt,name=IdKonsumen,proto3" json:"IdKonsumen,omitempty"`
	Nik          string               `protobuf:"bytes,2,opt,name=Nik,proto3" json:"Nik,omitempty"`
	FullName     string               `protobuf:"bytes,3,opt,name=FullName,proto3" json:"FullName,omitempty"`
	LegalName    string               `protobuf:"bytes,4,opt,name=LegalName,proto3" json:"LegalName,omitempty"`
	Gaji         float64              `protobuf:"fixed64,5,opt,name=Gaji,proto3" json:"Gaji,omitempty"`
	TempatLahir  string               `protobuf:"bytes,6,opt,name=TempatLahir,proto3" json:"TempatLahir,omitempty"`
	TanggalLahir *timestamp.Timestamp `protobuf:"bytes,7,opt,name=TanggalLahir,proto3" json:"TanggalLahir,omitempty"`
	FotoKtp      string               `protobuf:"bytes,8,opt,name=FotoKtp,proto3" json:"FotoKtp,omitempty"`
	FotoSelfie   string               `protobuf:"bytes,9,opt,name=FotoSelfie,proto3" json:"FotoSelfie,omitempty"`
	Email        string               `protobuf:"bytes,11,opt,name=Email,proto3" json:"Email,omitempty"`
	Password     string               `protobuf:"bytes,12,opt,name=Password,proto3" json:"Password,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,13,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,14,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Konsumen) Reset() {
	*x = Konsumen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Konsumen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Konsumen) ProtoMessage() {}

func (x *Konsumen) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Konsumen.ProtoReflect.Descriptor instead.
func (*Konsumen) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{0}
}

func (x *Konsumen) GetIdKonsumen() string {
	if x != nil {
		return x.IdKonsumen
	}
	return ""
}

func (x *Konsumen) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *Konsumen) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Konsumen) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *Konsumen) GetGaji() float64 {
	if x != nil {
		return x.Gaji
	}
	return 0
}

func (x *Konsumen) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *Konsumen) GetTanggalLahir() *timestamp.Timestamp {
	if x != nil {
		return x.TanggalLahir
	}
	return nil
}

func (x *Konsumen) GetFotoKtp() string {
	if x != nil {
		return x.FotoKtp
	}
	return ""
}

func (x *Konsumen) GetFotoSelfie() string {
	if x != nil {
		return x.FotoSelfie
	}
	return ""
}

func (x *Konsumen) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Konsumen) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Konsumen) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Konsumen) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdLimit     string               `protobuf:"bytes,1,opt,name=IdLimit,proto3" json:"IdLimit,omitempty"`
	IdKonsumen  string               `protobuf:"bytes,2,opt,name=IdKonsumen,proto3" json:"IdKonsumen,omitempty"`
	Tenor       uint32               `protobuf:"varint,3,opt,name=Tenor,proto3" json:"Tenor,omitempty"`
	BatasKredit float64              `protobuf:"fixed64,4,opt,name=BatasKredit,proto3" json:"BatasKredit,omitempty"`
	CreatedAt   *timestamp.Timestamp `protobuf:"bytes,5,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt   *timestamp.Timestamp `protobuf:"bytes,6,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{1}
}

func (x *Limit) GetIdLimit() string {
	if x != nil {
		return x.IdLimit
	}
	return ""
}

func (x *Limit) GetIdKonsumen() string {
	if x != nil {
		return x.IdKonsumen
	}
	return ""
}

func (x *Limit) GetTenor() uint32 {
	if x != nil {
		return x.Tenor
	}
	return 0
}

func (x *Limit) GetBatasKredit() float64 {
	if x != nil {
		return x.BatasKredit
	}
	return 0
}

func (x *Limit) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Limit) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Transaksi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTransaksi      string               `protobuf:"bytes,1,opt,name=IdTransaksi,proto3" json:"IdTransaksi,omitempty"`
	IdKonsumen       string               `protobuf:"bytes,2,opt,name=IdKonsumen,proto3" json:"IdKonsumen,omitempty"`
	NomorKontrak     string               `protobuf:"bytes,3,opt,name=NomorKontrak,proto3" json:"NomorKontrak,omitempty"`
	TanggalTransaksi *timestamp.Timestamp `protobuf:"bytes,4,opt,name=TanggalTransaksi,proto3" json:"TanggalTransaksi,omitempty"`
	Otr              uint64               `protobuf:"varint,5,opt,name=Otr,proto3" json:"Otr,omitempty"`
	AdminFee         float64              `protobuf:"fixed64,6,opt,name=AdminFee,proto3" json:"AdminFee,omitempty"`
	JumlahCicilan    float64              `protobuf:"fixed64,7,opt,name=JumlahCicilan,proto3" json:"JumlahCicilan,omitempty"`
	JumlahBunga      float64              `protobuf:"fixed64,8,opt,name=JumlahBunga,proto3" json:"JumlahBunga,omitempty"`
	NamaAsset        string               `protobuf:"bytes,9,opt,name=NamaAsset,proto3" json:"NamaAsset,omitempty"`
	JenisTransaksi   string               `protobuf:"bytes,10,opt,name=JenisTransaksi,proto3" json:"JenisTransaksi,omitempty"`
	CreatedAt        *timestamp.Timestamp `protobuf:"bytes,11,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt        *timestamp.Timestamp `protobuf:"bytes,12,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Transaksi) Reset() {
	*x = Transaksi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaksi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaksi) ProtoMessage() {}

func (x *Transaksi) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaksi.ProtoReflect.Descriptor instead.
func (*Transaksi) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{2}
}

func (x *Transaksi) GetIdTransaksi() string {
	if x != nil {
		return x.IdTransaksi
	}
	return ""
}

func (x *Transaksi) GetIdKonsumen() string {
	if x != nil {
		return x.IdKonsumen
	}
	return ""
}

func (x *Transaksi) GetNomorKontrak() string {
	if x != nil {
		return x.NomorKontrak
	}
	return ""
}

func (x *Transaksi) GetTanggalTransaksi() *timestamp.Timestamp {
	if x != nil {
		return x.TanggalTransaksi
	}
	return nil
}

func (x *Transaksi) GetOtr() uint64 {
	if x != nil {
		return x.Otr
	}
	return 0
}

func (x *Transaksi) GetAdminFee() float64 {
	if x != nil {
		return x.AdminFee
	}
	return 0
}

func (x *Transaksi) GetJumlahCicilan() float64 {
	if x != nil {
		return x.JumlahCicilan
	}
	return 0
}

func (x *Transaksi) GetJumlahBunga() float64 {
	if x != nil {
		return x.JumlahBunga
	}
	return 0
}

func (x *Transaksi) GetNamaAsset() string {
	if x != nil {
		return x.NamaAsset
	}
	return ""
}

func (x *Transaksi) GetJenisTransaksi() string {
	if x != nil {
		return x.JenisTransaksi
	}
	return ""
}

func (x *Transaksi) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaksi) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type KonsumenCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdKonsumen   string               `protobuf:"bytes,1,opt,name=IdKonsumen,proto3" json:"IdKonsumen,omitempty"`
	Nik          string               `protobuf:"bytes,2,opt,name=Nik,proto3" json:"Nik,omitempty"`
	FullName     string               `protobuf:"bytes,3,opt,name=FullName,proto3" json:"FullName,omitempty"`
	LegalName    string               `protobuf:"bytes,4,opt,name=LegalName,proto3" json:"LegalName,omitempty"`
	Gaji         float64              `protobuf:"fixed64,5,opt,name=Gaji,proto3" json:"Gaji,omitempty"`
	TempatLahir  string               `protobuf:"bytes,6,opt,name=TempatLahir,proto3" json:"TempatLahir,omitempty"`
	TanggalLahir *timestamp.Timestamp `protobuf:"bytes,7,opt,name=TanggalLahir,proto3" json:"TanggalLahir,omitempty"`
	FotoKtp      string               `protobuf:"bytes,8,opt,name=FotoKtp,proto3" json:"FotoKtp,omitempty"`
	FotoSelfie   string               `protobuf:"bytes,9,opt,name=FotoSelfie,proto3" json:"FotoSelfie,omitempty"`
	Email        string               `protobuf:"bytes,11,opt,name=Email,proto3" json:"Email,omitempty"`
	Password     string               `protobuf:"bytes,12,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *KonsumenCreate) Reset() {
	*x = KonsumenCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KonsumenCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KonsumenCreate) ProtoMessage() {}

func (x *KonsumenCreate) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KonsumenCreate.ProtoReflect.Descriptor instead.
func (*KonsumenCreate) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{3}
}

func (x *KonsumenCreate) GetIdKonsumen() string {
	if x != nil {
		return x.IdKonsumen
	}
	return ""
}

func (x *KonsumenCreate) GetNik() string {
	if x != nil {
		return x.Nik
	}
	return ""
}

func (x *KonsumenCreate) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *KonsumenCreate) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *KonsumenCreate) GetGaji() float64 {
	if x != nil {
		return x.Gaji
	}
	return 0
}

func (x *KonsumenCreate) GetTempatLahir() string {
	if x != nil {
		return x.TempatLahir
	}
	return ""
}

func (x *KonsumenCreate) GetTanggalLahir() *timestamp.Timestamp {
	if x != nil {
		return x.TanggalLahir
	}
	return nil
}

func (x *KonsumenCreate) GetFotoKtp() string {
	if x != nil {
		return x.FotoKtp
	}
	return ""
}

func (x *KonsumenCreate) GetFotoSelfie() string {
	if x != nil {
		return x.FotoSelfie
	}
	return ""
}

func (x *KonsumenCreate) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *KonsumenCreate) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LimitCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdLimit     string  `protobuf:"bytes,1,opt,name=IdLimit,proto3" json:"IdLimit,omitempty"`
	IdKonsumen  string  `protobuf:"bytes,2,opt,name=IdKonsumen,proto3" json:"IdKonsumen,omitempty"`
	Tenor       uint32  `protobuf:"varint,3,opt,name=Tenor,proto3" json:"Tenor,omitempty"`
	BatasKredit float64 `protobuf:"fixed64,4,opt,name=BatasKredit,proto3" json:"BatasKredit,omitempty"`
}

func (x *LimitCreate) Reset() {
	*x = LimitCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitCreate) ProtoMessage() {}

func (x *LimitCreate) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitCreate.ProtoReflect.Descriptor instead.
func (*LimitCreate) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{4}
}

func (x *LimitCreate) GetIdLimit() string {
	if x != nil {
		return x.IdLimit
	}
	return ""
}

func (x *LimitCreate) GetIdKonsumen() string {
	if x != nil {
		return x.IdKonsumen
	}
	return ""
}

func (x *LimitCreate) GetTenor() uint32 {
	if x != nil {
		return x.Tenor
	}
	return 0
}

func (x *LimitCreate) GetBatasKredit() float64 {
	if x != nil {
		return x.BatasKredit
	}
	return 0
}

type TransaksiCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTransaksi      string               `protobuf:"bytes,1,opt,name=IdTransaksi,proto3" json:"IdTransaksi,omitempty"`
	IdKonsumen       string               `protobuf:"bytes,2,opt,name=IdKonsumen,proto3" json:"IdKonsumen,omitempty"`
	NomorKontrak     string               `protobuf:"bytes,3,opt,name=NomorKontrak,proto3" json:"NomorKontrak,omitempty"`
	TanggalTransaksi *timestamp.Timestamp `protobuf:"bytes,4,opt,name=TanggalTransaksi,proto3" json:"TanggalTransaksi,omitempty"`
	Otr              uint64               `protobuf:"varint,5,opt,name=Otr,proto3" json:"Otr,omitempty"`
	AdminFee         float64              `protobuf:"fixed64,6,opt,name=AdminFee,proto3" json:"AdminFee,omitempty"`
	JumlahCicilan    float64              `protobuf:"fixed64,7,opt,name=JumlahCicilan,proto3" json:"JumlahCicilan,omitempty"`
	JumlahBunga      float64              `protobuf:"fixed64,8,opt,name=JumlahBunga,proto3" json:"JumlahBunga,omitempty"`
	NamaAsset        string               `protobuf:"bytes,9,opt,name=NamaAsset,proto3" json:"NamaAsset,omitempty"`
	JenisTransaksi   string               `protobuf:"bytes,10,opt,name=JenisTransaksi,proto3" json:"JenisTransaksi,omitempty"`
}

func (x *TransaksiCreate) Reset() {
	*x = TransaksiCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransaksiCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransaksiCreate) ProtoMessage() {}

func (x *TransaksiCreate) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransaksiCreate.ProtoReflect.Descriptor instead.
func (*TransaksiCreate) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{5}
}

func (x *TransaksiCreate) GetIdTransaksi() string {
	if x != nil {
		return x.IdTransaksi
	}
	return ""
}

func (x *TransaksiCreate) GetIdKonsumen() string {
	if x != nil {
		return x.IdKonsumen
	}
	return ""
}

func (x *TransaksiCreate) GetNomorKontrak() string {
	if x != nil {
		return x.NomorKontrak
	}
	return ""
}

func (x *TransaksiCreate) GetTanggalTransaksi() *timestamp.Timestamp {
	if x != nil {
		return x.TanggalTransaksi
	}
	return nil
}

func (x *TransaksiCreate) GetOtr() uint64 {
	if x != nil {
		return x.Otr
	}
	return 0
}

func (x *TransaksiCreate) GetAdminFee() float64 {
	if x != nil {
		return x.AdminFee
	}
	return 0
}

func (x *TransaksiCreate) GetJumlahCicilan() float64 {
	if x != nil {
		return x.JumlahCicilan
	}
	return 0
}

func (x *TransaksiCreate) GetJumlahBunga() float64 {
	if x != nil {
		return x.JumlahBunga
	}
	return 0
}

func (x *TransaksiCreate) GetNamaAsset() string {
	if x != nil {
		return x.NamaAsset
	}
	return ""
}

func (x *TransaksiCreate) GetJenisTransaksi() string {
	if x != nil {
		return x.JenisTransaksi
	}
	return ""
}

type KonsumenCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Konsumen *Konsumen `protobuf:"bytes,1,opt,name=Konsumen,proto3" json:"Konsumen,omitempty"`
}

func (x *KonsumenCreated) Reset() {
	*x = KonsumenCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KonsumenCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KonsumenCreated) ProtoMessage() {}

func (x *KonsumenCreated) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KonsumenCreated.ProtoReflect.Descriptor instead.
func (*KonsumenCreated) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{6}
}

func (x *KonsumenCreated) GetKonsumen() *Konsumen {
	if x != nil {
		return x.Konsumen
	}
	return nil
}

type LimitCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit *Limit `protobuf:"bytes,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
}

func (x *LimitCreated) Reset() {
	*x = LimitCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LimitCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LimitCreated) ProtoMessage() {}

func (x *LimitCreated) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LimitCreated.ProtoReflect.Descriptor instead.
func (*LimitCreated) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{7}
}

func (x *LimitCreated) GetLimit() *Limit {
	if x != nil {
		return x.Limit
	}
	return nil
}

type TransaksiCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaksi *Transaksi `protobuf:"bytes,1,opt,name=Transaksi,proto3" json:"Transaksi,omitempty"`
}

func (x *TransaksiCreated) Reset() {
	*x = TransaksiCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransaksiCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransaksiCreated) ProtoMessage() {}

func (x *TransaksiCreated) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransaksiCreated.ProtoReflect.Descriptor instead.
func (*TransaksiCreated) Descriptor() ([]byte, []int) {
	return file_kafka_proto_rawDescGZIP(), []int{8}
}

func (x *TransaksiCreated) GetTransaksi() *Transaksi {
	if x != nil {
		return x.Transaksi
	}
	return nil
}

var File_kafka_proto protoreflect.FileDescriptor

var file_kafka_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6b,
	0x61, 0x66, 0x6b, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcc, 0x03,
	0x0a, 0x08, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64,
	0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x69,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4e, 0x69, 0x6b, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x65, 0x67, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x65, 0x67,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x6a, 0x69, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x47, 0x61, 0x6a, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x65,
	0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x3e, 0x0a, 0x0c,
	0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x46, 0x6f, 0x74, 0x6f, 0x4b, 0x74, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x46,
	0x6f, 0x74, 0x6f, 0x4b, 0x74, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x74, 0x6f, 0x53, 0x65,
	0x6c, 0x66, 0x69, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6f, 0x74, 0x6f,
	0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xed, 0x01, 0x0a,
	0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x64, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x64, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x54, 0x65, 0x6e, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x61, 0x73, 0x4b,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x42, 0x61, 0x74,
	0x61, 0x73, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe9, 0x03, 0x0a,
	0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x49, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x49, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c,
	0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x6b,
	0x12, 0x46, 0x0a, 0x10, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x6b, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x4f, 0x74, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x4f, 0x74, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68,
	0x43, 0x69, 0x63, 0x69, 0x6c, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x4a,
	0x75, 0x6d, 0x6c, 0x61, 0x68, 0x43, 0x69, 0x63, 0x69, 0x6c, 0x61, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x42, 0x75, 0x6e, 0x67, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x42, 0x75, 0x6e, 0x67, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x4a, 0x65, 0x6e, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x6b, 0x73, 0x69, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xde, 0x02, 0x0a, 0x0e, 0x4b, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49,
	0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x4e,
	0x69, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4e, 0x69, 0x6b, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x65, 0x67,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x65,
	0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47, 0x61, 0x6a, 0x69, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x47, 0x61, 0x6a, 0x69, 0x12, 0x20, 0x0a, 0x0b, 0x54,
	0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x54, 0x65, 0x6d, 0x70, 0x61, 0x74, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x3e, 0x0a,
	0x0c, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0c, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4c, 0x61, 0x68, 0x69, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x46, 0x6f, 0x74, 0x6f, 0x4b, 0x74, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x46, 0x6f, 0x74, 0x6f, 0x4b, 0x74, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6f, 0x74, 0x6f, 0x53,
	0x65, 0x6c, 0x66, 0x69, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6f, 0x74,
	0x6f, 0x53, 0x65, 0x6c, 0x66, 0x69, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x7f, 0x0a, 0x0b, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x64, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x49, 0x64, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x65, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x54, 0x65, 0x6e, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x61, 0x74, 0x61,
	0x73, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x42,
	0x61, 0x74, 0x61, 0x73, 0x4b, 0x72, 0x65, 0x64, 0x69, 0x74, 0x22, 0xfb, 0x02, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x49, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x49, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e,
	0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x4b, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4e, 0x6f, 0x6d, 0x6f, 0x72, 0x4b, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x6b, 0x12, 0x46, 0x0a, 0x10, 0x54, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x54, 0x61, 0x6e, 0x67,
	0x67, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x12, 0x10, 0x0a, 0x03,
	0x4f, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x4f, 0x74, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x46, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4a, 0x75,
	0x6d, 0x6c, 0x61, 0x68, 0x43, 0x69, 0x63, 0x69, 0x6c, 0x61, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0d, 0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x43, 0x69, 0x63, 0x69, 0x6c, 0x61, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x42, 0x75, 0x6e, 0x67, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x4a, 0x75, 0x6d, 0x6c, 0x61, 0x68, 0x42, 0x75, 0x6e,
	0x67, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x61, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b,
	0x73, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x4a, 0x65, 0x6e, 0x69, 0x73, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x22, 0x46, 0x0a, 0x0f, 0x4b, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x4b,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4b, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e, 0x52, 0x08, 0x4b, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x6e,
	0x22, 0x3a, 0x0a, 0x0c, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x4a, 0x0a, 0x10,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x36, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x52, 0x09, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x6b, 0x73, 0x69, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x3b, 0x6b,
	0x61, 0x66, 0x6b, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kafka_proto_rawDescOnce sync.Once
	file_kafka_proto_rawDescData = file_kafka_proto_rawDesc
)

func file_kafka_proto_rawDescGZIP() []byte {
	file_kafka_proto_rawDescOnce.Do(func() {
		file_kafka_proto_rawDescData = protoimpl.X.CompressGZIP(file_kafka_proto_rawDescData)
	})
	return file_kafka_proto_rawDescData
}

var file_kafka_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_kafka_proto_goTypes = []interface{}{
	(*Konsumen)(nil),            // 0: kafkaMessages.Konsumen
	(*Limit)(nil),               // 1: kafkaMessages.Limit
	(*Transaksi)(nil),           // 2: kafkaMessages.Transaksi
	(*KonsumenCreate)(nil),      // 3: kafkaMessages.KonsumenCreate
	(*LimitCreate)(nil),         // 4: kafkaMessages.LimitCreate
	(*TransaksiCreate)(nil),     // 5: kafkaMessages.TransaksiCreate
	(*KonsumenCreated)(nil),     // 6: kafkaMessages.KonsumenCreated
	(*LimitCreated)(nil),        // 7: kafkaMessages.LimitCreated
	(*TransaksiCreated)(nil),    // 8: kafkaMessages.TransaksiCreated
	(*timestamp.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_kafka_proto_depIdxs = []int32{
	9,  // 0: kafkaMessages.Konsumen.TanggalLahir:type_name -> google.protobuf.Timestamp
	9,  // 1: kafkaMessages.Konsumen.CreatedAt:type_name -> google.protobuf.Timestamp
	9,  // 2: kafkaMessages.Konsumen.UpdatedAt:type_name -> google.protobuf.Timestamp
	9,  // 3: kafkaMessages.Limit.CreatedAt:type_name -> google.protobuf.Timestamp
	9,  // 4: kafkaMessages.Limit.UpdatedAt:type_name -> google.protobuf.Timestamp
	9,  // 5: kafkaMessages.Transaksi.TanggalTransaksi:type_name -> google.protobuf.Timestamp
	9,  // 6: kafkaMessages.Transaksi.CreatedAt:type_name -> google.protobuf.Timestamp
	9,  // 7: kafkaMessages.Transaksi.UpdatedAt:type_name -> google.protobuf.Timestamp
	9,  // 8: kafkaMessages.KonsumenCreate.TanggalLahir:type_name -> google.protobuf.Timestamp
	9,  // 9: kafkaMessages.TransaksiCreate.TanggalTransaksi:type_name -> google.protobuf.Timestamp
	0,  // 10: kafkaMessages.KonsumenCreated.Konsumen:type_name -> kafkaMessages.Konsumen
	1,  // 11: kafkaMessages.LimitCreated.Limit:type_name -> kafkaMessages.Limit
	2,  // 12: kafkaMessages.TransaksiCreated.Transaksi:type_name -> kafkaMessages.Transaksi
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_kafka_proto_init() }
func file_kafka_proto_init() {
	if File_kafka_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kafka_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Konsumen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaksi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KonsumenCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransaksiCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KonsumenCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LimitCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransaksiCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kafka_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_proto_goTypes,
		DependencyIndexes: file_kafka_proto_depIdxs,
		MessageInfos:      file_kafka_proto_msgTypes,
	}.Build()
	File_kafka_proto = out.File
	file_kafka_proto_rawDesc = nil
	file_kafka_proto_goTypes = nil
	file_kafka_proto_depIdxs = nil
}
